@using System.Web.Mvc.Html
@using Enums.EnumExtensions
@using Enums.Enums
@using Resources
@model ServiceModels.ServiceCommandAnswers.HospitalRegistrationsCommandAnswers.ChangeHospitalRegistrationForNewSectionCommandAnswer

@{
    ViewBag.Title = "ChangeHospitalRegistrationForNewSection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    int i = 0;
}
@using (Html.BeginForm("ApplyChangesNewHospitalRegistration", "ChangeHospitalRegistrationPage", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(command => command.Token);
    <div class="panel-body">
        <div class="change-hospital-registration-panel">
           
             <div class="dropdown">
                @Html.DropDownList(
                    "HospitalProfileId",
                    new SelectList(
                        Model.FreeHospitalSectionsForRegistration.Select(x => new {Value = x.Id, Text = x.Name}),
                        "Value",
                        "Text"), new {@class = "btn btn-primary dropdown-toggle"})
            </div>

            <br />

            @{
                List<Sex?> sexes;
                var freePlaces = Model.FreeHospitalSectionsForRegistration.FirstOrDefault();

                if (freePlaces != null)
                {
                    if (freePlaces != null && freePlaces.HasGenderFactor)
                    {
                        sexes = Enum.GetValues(typeof (Sex)).Cast<Sex>().Select(sex => (Sex?) sex).ToList();
                    }
                    else
                    {
                        sexes = new List<Sex?> {null};
                    }
                    foreach (var sex in sexes)
                    {
                        if (sex != null)
                        {
                            <div class="input-group">
                                <span class="input-group-addon" id="basic-addon1">@MainResources.EmptyPlacePageSex</span>
                                <label class="form-control" aria-describedby="basic-addon1" name="CountFreePlaces[@i].Sex" id="CountFreePlaces[@i].Sex">@sex.Value.ToCorrectString()</label>
                                <input type="hidden" name="CountFreePlaces[@i].Sex" id="CountFreePlaces[@i].Sex" class="form-control" value="@sex"/>
                                <br/>
                            </div>
                        }
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1">@MainResources.EmptyPlacePageCount</span>
                            <input type="number" required class="form-control" aria-describedby="basic-addon1" name="CountFreePlaces[@i].OpenCount" id="CountFreePlaces[@i].OpenCount"/>

                            <br/>
                        </div>
                        <br/>
                        i++;
                    }
                }
                else
                {
                    <h1>Нет больше возможности регистрировать</h1>
                }
            }
        </div>
        <input type="button" title="Back" class="btn btn-default" value="@MainResources.ButtonBack" onclick="location.href = '@Url.Action("Step2" + "", "ChangeHospitalRegistrationPage", new {Token = Model.Token, Date = Model.Date})' "/>
        <input class="btn btn-sm btn-primary" type="submit" value="@MainResources.ButtonAdd" />
       
        @Html.HiddenFor(model => model.Date)
        @Html.HiddenFor(model => model.FreeHospitalSectionsForRegistration)

     </div>
}