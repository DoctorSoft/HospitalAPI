
@{
    ViewBag.Title = "ShowAutocompletePage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Enums.EnumExtensions
@model ServiceModels.ServiceCommandAnswers.HospitalRegistrationsCommandAnswers.ShowAutocompletePageCommandAnswer

<h2>Заполнить все свободные даты</h2>

@section Scripts {
    <script type="text/javascript">

        var setStartValue = function() {
            $('#HospitalSectionProfiles').val('@Model.HospitalSectionProfileId');
            $('#Sexes').val('@Model.SexId');
        };

    setStartValue();

    var SubmitData = function (e) {

        var checkBoxesLink = "";
        for (var i = 0; i < @Model.DaysOfWeek.Count; i++) {
            var attrStyle = getComputedStyle(document.getElementById("DOF[" + i + "]")).display !== 'none';
            checkBoxesLink += "&DaysOfWeek[" + i + "]=" + attrStyle;
        }

        console.log("Array", checkBoxesLink);

        var url = '@Url.Action("AutocompleteEmptyPlaces", "ChangeHospitalRegistrationPage", new {Token = @Model.Token})'
            + '?SexId=' + $('#Sexes').val()
            + '&HospitalSectionProfileId=' + $('#HospitalSectionProfiles').val()
            + '&CountValue=' + $('#CountValue').val()
            + checkBoxesLink;
        window.location.replace(url);
    };
</script>
}

<style type="text/css">
    .form-group input[type="checkbox"] {
        display: none;
    }

    .form-group input[type="checkbox"] + .btn-group > label span {
        width: 20px;
    }

    .form-group input[type="checkbox"] + .btn-group > label span:first-child {
        display: none;
    }
    .form-group input[type="checkbox"] + .btn-group > label span:last-child {
        display: inline-block;   
    }

    .form-group input[type="checkbox"]:checked + .btn-group > label span:first-child {
        display: inline-block;
    }
    .form-group input[type="checkbox"]:checked + .btn-group > label span:last-child {
        display: none;   
    }

    .btn-group {
        min-width: 80px;
    }
</style>

<div class="schedule-label" style="align-items: center">
    <div class="panel-body form-group schedule-label">
        <div class="col-lg-10 panel-body ">
            <div style="width: 100%; float: left;">
                <div>
                    <label>Дни недели:</label>
                </div>
                <div>
                    @{
                        for (var dayOfWeek = (int)DayOfWeek.Sunday; dayOfWeek <= (int)DayOfWeek.Saturday; dayOfWeek++)
                        {
                            <div class="[ form-group ]" style="float: left; margin: 10px; min-width: 90px;">
                                <input type="checkbox" name="DaysOfWeek[@(dayOfWeek)]" id="DaysOfWeek[@(dayOfWeek)]" autocomplete="off" />
                                <div class="[ btn-group ]">
                                    <label for="DaysOfWeek[@(dayOfWeek)]" class="[ btn btn-default ]">
                                        <span class="[ glyphicon glyphicon-ok ]" id="DOF[@(dayOfWeek)]"></span>
                                        <span> </span>
                                    </label>
                                    <label for="DaysOfWeek[@((int)dayOfWeek)]" class="[ btn btn-default  ]">
                                        @(((DayOfWeek)dayOfWeek).ShortName())
                                    </label>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>



                    <div class="col-lg-10 panel-body ">
                        <div class="col-lg-3">
                            <label>Отделение:</label>
                        </div>
                        <div class="col-lg-7">
                            @Html.DropDownListFor(answer => answer.HospitalSectionProfiles, Model.HospitalSectionProfiles.Select(pair => new SelectListItem { Selected = pair.Key == Model.HospitalSectionProfileId, Value = pair.Key.ToString(), Text = pair.Value, Disabled = false }), new { @class = "form-control", @value = Model.HospitalSectionProfiles.FirstOrDefault(pair => pair.Key == Model.HospitalSectionProfileId).Key.ToString(), @text = Model.HospitalSectionProfiles.FirstOrDefault(pair => pair.Key == Model.HospitalSectionProfileId).Value })
                        </div>

                    </div>

                    @if (Model.HasGenderFactor)
                    {
                        <div class="col-lg-10 panel-body ">
                            <div class="col-lg-3">
                                <label>Пол:</label>
                            </div>
                            <div class="col-lg-7">
                                @Html.DropDownListFor(answer => answer.Sexes, Model.Sexes.Select(pair => new SelectListItem { Selected = pair.Key == Model.SexId, Value = pair.Key.ToString(), Text = pair.Value, Disabled = false }), new { @class = "form-control", @value = Model.Sexes.FirstOrDefault(pair => pair.Key == Model.SexId).Key.ToString(), @text = Model.Sexes.FirstOrDefault(pair => pair.Key == Model.SexId).Value })
                            </div>

                        </div>
                    }

                    <div class="col-lg-10 panel-body ">
                        <div class="col-lg-3">
                            <label>Количество мест:</label>
                        </div>
                        <div class="col-lg-7">
                            <input class="form-control" type="number" required value="@Model.CountValue" name="CountValue" id="CountValue">
                        </div>
                    </div>

                    <div class="col-lg-10 panel-body ">
                        <div class="col-lg-3">
                            <input class="btn btn-sm btn-primary" type="button" onclick="SubmitData();" value="Добавить" />
                        </div>
                    </div>
                </div>
</div>

