
@{
    ViewBag.Title = "ChangeHospitalRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Enums.EnumExtensions
@using Enums.Enums
@using Resources
@model ServiceModels.ServiceCommandAnswers.HospitalRegistrationsCommandAnswers.ChangeHospitalRegistrationForSelectedSectionCommandAnswer

@if (ViewBag.Errors != null)
{
    var errors = ViewBag.Errors as List<ServiceModels.ModelTools.CommandAnswerError>;
    if (errors.Any())
    {
        foreach (var error in errors)
        {
            <div class="alert-warning alert"> @error.FieldName : @error.Title </div>
        }
    }
}

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="panel-title">
           @MainResources.EmptyPlacePageTableTitle @Model.SectionProfileName (@Model.Date)
        </div>
    </div>
    @using (Html.BeginForm("ApplyChangesHospitalRegistration", "ChangeHospitalRegistrationPage", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(command => command.Token)
        ;
        <div class="panel-body">
            <div class="change-hospital-registration-panel">

                @for (var i = 0; i < Model.StatisticItems.Count; i++)
                {
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">@MainResources.EmptyPlacePageSex</span>
                        <label name="FreeHospitalSectionsForRegistration[@i].Sex" id="FreeHospitalSectionsForRegistration[@i].Sex" class="form-control" title="@Model.StatisticItems[i].Sex.ToString("G")" > @Model.StatisticItems[i].Sex.ToCorrectString() </label>
                        <input type="hidden" name="FreeHospitalSectionsForRegistration[@i].Sex" id="FreeHospitalSectionsForRegistration[@i].Sex" class="form-control" value="@Model.StatisticItems[i].Sex.ToString("D")" />
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">Зарег.</span>
                        @if (Model.StatisticItems[i].Sex == Sex.Male)
                        {
                            <label class="form-control"> @Model.CountRegisteredMale.ToString("G") </label>
                            if (Model.CountRegisteredMale != 0)
                            {
                                <input type="button" title="@MainResources.ButtonView" class="btn btn-sm btn-primary" value="@MainResources.ButtonView" onclick=" location.href = '@Url.Action("ViewDetailedInformationOnRegisteredPatients", "ChangeHospitalRegistrationPage", new {Token = Model.Token, EmptyPlaceByTypeStatisticId = Model.EmptyPlaceByTypeStatisticIdMaleId, HospitalProfileId = Model.HospitalProfileId, Date = Model.Date})' " />
                            }
                        }
                        else
                        {
                            <label class="form-control"> @Model.CountRegisteredFemale.ToString("G") </label>
                            if (Model.CountRegisteredFemale != 0)
                            {
                                <input type="button" title="@MainResources.ButtonView" class="btn btn-sm btn-primary" value="@MainResources.ButtonView" onclick=" location.href = '@Url.Action("ViewDetailedInformationOnRegisteredPatients", "ChangeHospitalRegistrationPage", new {Token = Model.Token, EmptyPlaceByTypeStatisticId = Model.EmptyPlaceByTypeStatisticIdFeMaleId, HospitalProfileId = Model.HospitalProfileId, Date = Model.Date})' " />
                            }
                        }
                    
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">@MainResources.EmptyPlacePageCount</span>
                        <input class="form-control" id="FreeHospitalSectionsForRegistration[@i].OpenCount" name="FreeHospitalSectionsForRegistration[@i].OpenCount" type="number" value="@Model.StatisticItems[i].OpenCount.ToString("G")" required />
                    </div>
                    <br />
                }

            </div>
            <input type="button" title="@MainResources.ButtonBack" class="btn btn-default" value="@MainResources.ButtonBack" onclick=" location.href = '@Url.Action("Step2", "ChangeHospitalRegistrationPage", new {Token = Model.Token, Date = Model.Date})' " />
            <input class="btn btn-sm btn-primary" type="submit" value="@MainResources.ButtonChange" />
            <span></span>
            @if (Model.CountRegisteredFemale != 0 || Model.CountRegisteredMale != 0)
            {
                <input type="button" title="@MainResources.ButtonViewAll" class="btn btn-default padding-left" value="@MainResources.ButtonViewAll" onclick=" location.href = '@Url.Action("ViewDetailedInformationOnRegisteredPatients", "ChangeHospitalRegistrationPage", new {Token = Model.Token, EmptyPlaceByTypeStatisticId = Model.EmptyPlaceByTypeStatisticIdFeMaleId, FullInformation = Model.EmptyPlaceByTypeStatisticIdMaleId, HospitalProfileId = Model.HospitalProfileId, Date = Model.Date})' " />
            }
            @Html.HiddenFor(model => model.Date)
            @Html.HiddenFor(model => model.HospitalProfileId)
            @Html.HiddenFor(model => model.EmptyPlaceByTypeStatisticIdMaleId)
            @Html.HiddenFor(model => model.EmptyPlaceByTypeStatisticIdFeMaleId)
            @Html.HiddenFor(model => model.SectionProfileName)
            @Html.HiddenFor(model => model.CountRegisteredMale)
            @Html.HiddenFor(model => model.CountRegisteredFemale)

        </div>
    }
</div>
